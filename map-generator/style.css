:root {
    font-size: 16px;
    --ui-bg: #eee;
}

body {
    padding: 0px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    /* background-color: black; */
}

.map {
    --hex-size: 2.5rem;
    box-sizing: border-box;
    margin: 0px;
    margin-left: auto;
    margin-right: auto;
    --margin: 2px;
    --pad: 15px;
    padding: calc(var(--pad) * 1.5) calc(var(--pad)/cos(30deg));
    background-color: black;
    clip-path: polygon(-50% 50%,
            50% 100%,
            150% 50%,
            50% 0);
    aspect-ratio: cos(30deg);
}

.row {
    display: flex;
    width: 100%;
    justify-content: center;
    align-items: center;
    /* gap of 1 hexagon, that fits row above */
    gap: calc((var(--hex-size)/ cos(30deg))/2 + var(--margin)*2);
}

.row:not(:first-child) {
    margin-top: calc(var(--hex-size) / -2 + var(--margin));
}

.hex {
    /* uncoment for debug */
    color: transparent;
    font-size: 1px;
    box-sizing: border-box;
    text-align: center;
    height: var(--hex-size);
    background: darkgrey;
    transform-origin: center;
    flex-shrink: 0;
    clip-path: polygon(50% -50%, 100% 50%, 50% 150%, 0% 50%);
    aspect-ratio: 1/cos(30deg);
}

.hex::before {
    content: attr(data-dist);
    display: block;
}

.controls:target {
    visibility: visible;
}

.legend,
.controls {
    visibility: hidden;
    background: var(--ui-bg);
    border-radius: 4px;
    font-family: monospace;
    position: fixed;
    z-index: 2;
    top: 20px;
    left: 20px;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    gap: .5em;
    box-shadow: 5px 8px 5px rgba(0, 0, 0, .2);
    border: 1px solid gray;
}

.legend {
    visibility: visible;
    left: unset;
    top: unset;
    right: 20px;
    bottom: 20px;
}

.bioms-wrapper {
    display: flex;
    flex-direction: column;
    align-items: left;
}

.bioms-wrapper .biom {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.biom input {
    height: 1rem;
    width: 1rem;
}

.controls a {
    display: contents;
}

.legend>label,
.controls>label {
    font-weight: bold;
}

.controls :is(select, button) {
    font-size: 1rem;
}

#open-config {
    position: fixed;
    z-index: 2;
    top: 20px;
    left: 20px;
    width: 3rem;
    height: 3rem;
    padding: 0;
    border: 0;
    border-radius: 4px;
}

#open-config img {
    width: 100%;
    box-sizing: border-box;
    aspect-ratio: 1;
    padding: 5px;
    object-position: center;
}

.biom-legend {
    display: flex;
    background-color: black;
    align-items: center;
}

.biom-legend div {
    width: 100%;
    height: 20px;
    background-color: var(--ui-bg);
}

.biom-legend div:not(:first-child) {
    width: 60px;
    border: 3px solid white;
    box-sizing: border-box;
}


button {
    background: white;
    border: 1px solid gray;
    cursor: pointer;
}




/* 
    patterns
*/


body:not(.disabled-patterns) [class*="pattern"] {
    background-blend-mode: darken;
}

body:not(.disabled-patterns) .wavy-pattern {
    background-image: repeating-radial-gradient(circle at 0 0, transparent 0, rgba(0, 0, 0, 0.3) 5px), repeating-linear-gradient(rgba(0, 0, 0, 0.1), white);
}

body:not(.disabled-patterns) .zigzag-pattern {
    background-image: linear-gradient(135deg, rgba(0, 0, 0, 0.3) 25%, transparent 25%), linear-gradient(225deg, rgba(0, 0, 0, 0.3) 25%, transparent 25%), linear-gradient(45deg, rgba(0, 0, 0, 0.3) 25%, transparent 25%), linear-gradient(315deg, rgba(0, 0, 0, 0.3) 25%, #ffffff 25%);
    background-position: 5px 0, 5px 0, 0 0, 0 0;
    background-size: 10px 10px;
}

body:not(.disabled-patterns) .diagonal-lines-pattern {
    background-image: repeating-linear-gradient(45deg, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3) 2px, transparent 2px, transparent 6px);
}

body:not(.disabled-patterns) .checkerboard-pattern {
    background-image: repeating-linear-gradient(45deg, rgba(0, 0, 0, 0.3) 25%, transparent 25%, transparent 75%, rgba(0, 0, 0, 0.3) 75%, rgba(0, 0, 0, 0.3)), repeating-linear-gradient(45deg, rgba(0, 0, 0, 0.3) 25%, #ffffff 25%, #ffffff 75%, rgba(0, 0, 0, 0.3) 75%, rgba(0, 0, 0, 0.3));
    background-position: 0 0, 8px 8px;
    background-size: 16px 16px;
}

body:not(.disabled-patterns) .lines-pattern {
    --size: 3px;
    background-image: linear-gradient(to right, rgba(0,0,0,0.3), rgba(0,0,0,0.3) var(--size), #ffffff var(--size), #ffffff );
    background-size: calc(var(--size)*2) 100%;
}

body:not(.disabled-patterns) .triangles-pattern {
    background-image: linear-gradient(45deg, rgba(0, 0, 0, 0.3) 50%, #ffffff 50%);
    background-size: 8px 8px;
}


body:not(.disabled-patterns) .cubes-pattern {
    --size: 8px;
    background-image:
        linear-gradient(30deg, #333 12%, transparent 12.5%, transparent 87%, #333 87.5%, #333),
        linear-gradient(150deg, #333 12%, transparent 12.5%, transparent 87%, #333 87.5%, #333),
        linear-gradient(30deg, #333 12%, transparent 12.5%, transparent 87%, #333 87.5%, #333),
        linear-gradient(150deg, #333 12%, transparent 12.5%, transparent 87%, #333 87.5%, #333),
        linear-gradient(60deg, rgba(0, 0, 0, 0.35) 25%, transparent 25.5%, transparent 75%, rgba(0, 0, 0, 0.35) 75%, rgba(0, 0, 0, 0.35)),
        linear-gradient(60deg, rgba(0, 0, 0, 0.35) 25%, transparent 25.5%, transparent 75%, rgba(0, 0, 0, 0.35) 75%, rgba(0, 0, 0, 0.35));
    background-size: calc(var(--size) * 2) calc(var(--size) * 4);
    background-position: 0 0, 0 0, var(--size) calc(var(--size) * 2), var(--size) calc(var(--size) * 2), 0 0, var(--size) calc(var(--size) * 2);

}

body:not(.disabled-patterns) .paper-pattern {
    --size: 0.75px;
    background-image: linear-gradient(rgba(0, 0, 0, 0.3) calc(var(--size) * 2), transparent calc(var(--size) * 2)),
        linear-gradient(90deg, rgba(0, 0, 0, 0.3) calc(var(--size) * 2), transparent calc(var(--size) * 2)),
        linear-gradient(rgba(0, 0, 0, 0.3) var(--size), transparent var(--size)),
        linear-gradient(90deg, rgba(0, 0, 0, 0.3) var(--size), #ffffff var(--size));
    background-size: calc(var(--size) * 20) calc(var(--size) * 20), calc(var(--size) * 20) calc(var(--size) * 20), calc(var(--size) * 10) calc(var(--size) * 10), calc(var(--size) * 10) calc(var(--size) * 10);
    background-position: calc(var(--size) * -2) calc(var(--size) * -2), calc(var(--size) * -2) calc(var(--size) * -2), calc(-1 * var(--size)) calc(-1 * var(--size)), calc(-1 * var(--size)) calc(-1 * var(--size));
}